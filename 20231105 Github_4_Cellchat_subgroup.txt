#Library
library(CellChat)
library(ggplot2)                  
library(patchwork)
library(ggalluvial)
library(igraph)
library(dplyr)
library(Seurat)
options(stringsAsFactors = FALSE)

##Read object
F.combined <- readRDS(file = "D:/scRNA_KGD/20230826_10X_TN7172289/filter/TN.combined_19_20231102_Fsubset.rds")
SC.combined <- readRDS(file = "D:/scRNA_KGD/20230826_10X_TN7172289/filter/TN.combined_19_20231101_Msubset.rds")
#Rename cluster
new.cluster.ids <- c("FBs0","FBs1","FBs2","FBs3","FBs4")
names(new.cluster.ids) <- levels(F.combined)
Fname.subgroup <- RenameIdents(F.combined, new.cluster.ids)
DimPlot(Fname.subgroup, reduction = "umap",label = TRUE, pt.size = 0.8)

new.cluster.ids <- c("MYLs0","MYLs1","MYLs2")
names(new.cluster.ids) <- levels(SC.combined)
SCname.subgroup <- RenameIdents(SC.combined, new.cluster.ids)
DimPlot(SCname.subgroup, reduction = "umap",label = TRUE, pt.size = 0.8)
#Merge object
CellChat.merge <- merge(Fname.subgroup, y = c(SCname.subgroup), project = "groups")
table(CellChat.merge$orig.ident)
table(CellChat.merge@active.ident)
DefaultAssay(CellChat.merge) <- "RNA"


##Data input & processing and initialization of CellChat object
#Extract the CellChat input files from a Seurat V3 object
data.input <- GetAssayData(CellChat.merge, assay = "RNA", slot = "data") # normalized data matrix
labels <- Idents(CellChat.merge)
meta <- data.frame(group = labels, row.names = names(labels)) # create a dataframe of the cell labels

#Create a CellChat object using data matrix as input
cellchat <- createCellChat(object = data.input, meta = meta, group.by = "group")

#Add cell information into meta slot of the object
cellchat <- addMeta(cellchat, meta = meta, meta.name = "labels")
cellchat <- setIdent(cellchat, ident.use = "labels") # set "labels" as default cell identity
levels(cellchat@idents) # show factor levels of the cell labels
groupSize <- as.numeric(table(cellchat@idents)) # number of cells in each cell group

#Set the ligand-receptor interaction database
CellChatDB <- CellChatDB.human # use CellChatDB.mouse if running on mouse data
showDatabaseCategory(CellChatDB)
##Download all interaction pathways of CellChatDB
CellChatDB$interaction
write.csv(CellChatDB$interaction, file="C:/Users/user/Desktop/CellChatDB$interaction.csv", row.names=FALSE)

# Show the structure of the database
dplyr::glimpse(CellChatDB$interaction)
#> Rows: 1,939
#> Columns: 11
#> $ interaction_name   <chr> "TGFB1_TGFBR1_TGFBR2", "TGFB2_TGFBR1_TGFBR2", "TGF…
#> $ pathway_name       <chr> "TGFb", "TGFb", "TGFb", "TGFb", "TGFb", "TGFb", "T…
#> $ ligand             <chr> "TGFB1", "TGFB2", "TGFB3", "TGFB1", "TGFB1", "TGFB…
#> $ receptor           <chr> "TGFbR1_R2", "TGFbR1_R2", "TGFbR1_R2", "ACVR1B_TGF…
#> $ agonist            <chr> "TGFb agonist", "TGFb agonist", "TGFb agonist", "T…
#> $ antagonist         <chr> "TGFb antagonist", "TGFb antagonist", "TGFb antago…
#> $ co_A_receptor      <chr> "", "", "", "", "", "", "", "", "", "", "", "", ""…
#> $ co_I_receptor      <chr> "TGFb inhibition receptor", "TGFb inhibition recep…
#> $ evidence           <chr> "KEGG: hsa04350", "KEGG: hsa04350", "KEGG: hsa0435…
#> $ annotation         <chr> "Secreted Signaling", "Secreted Signaling", "Secre…
#> $ interaction_name_2 <chr> "TGFB1 - (TGFBR1+TGFBR2)", "TGFB2 - (TGFBR1+TGFBR2…

##Download all interaction pathways of CellChatDB
#CellChatDB$interaction
#write.csv(CellChatDB$interaction, file="C:/Users/user/Desktop/CellChatDB$interaction", row.names=FALSE)

# use a subset of CellChatDB for cell-cell communication analysis
#CellChatDB.use <- subsetDB(CellChatDB, search = "") # use Secreted Signaling
# use all CellChatDB for cell-cell communication analysis
CellChatDB.use <- CellChatDB # simply use the default CellChatDB

# set the used database in the object
cellchat@DB <- CellChatDB.use

#Preprocessing the expression data for cell-cell communication analysis
cellchat <- subsetData(cellchat) # subset the expression data of signaling genes for saving computation cost
future::plan("multisession", workers = 4) # do parallel
#> Warning: [ONE-TIME WARNING] Forked processing ('multicore') is disabled
#> in future (>= 1.13.0) when running R from RStudio, because it is
#> considered unstable. Because of this, plan("multicore") will fall
#> back to plan("sequential"), and plan("multiprocess") will fall back to
#> plan("multisession") - not plan("multicore") as in the past. For more details,
#> how to control forked processing or not, and how to silence this warning in
#> future R sessions, see ?future::supportsMulticore
cellchat <- identifyOverExpressedGenes(cellchat)
cellchat <- identifyOverExpressedInteractions(cellchat)
cellchat <- projectData(cellchat, PPI.human)

#Inference of cell-cell communication network
#Compute the communication probability and infer cellular communication network
cellchat <- computeCommunProb(cellchat, raw.use = TRUE)
# Filter out the cell-cell communication if there are only few number of cells in certain cell groups
cellchat <- filterCommunication(cellchat, min.cells = 3)

#Extract the inferred cellular communication network as a data frame
df.net <- subsetCommunication(cellchat)

#Infer the cell-cell communication at a signaling pathway level
cellchat <- computeCommunProbPathway(cellchat)

#Calculate the aggregated cell-cell communication network
cellchat <- aggregateNet(cellchat)

##Part III: Visualization of cell-cell communication network
pathways.show <- c("COLLAGEN") 

#Contribution
netAnalysis_contribution(cellchat, signaling = pathways.show)

# Hierarchy plot
# Here we define `vertex.receive` so that the left portion of the hierarchy plot shows signaling to fibroblast and the right portion shows signaling to immune cells 
vertex.receiver = seq(1,5) # a numeric vector. 
netVisual_aggregate(cellchat, signaling = pathways.show,  vertex.receiver = vertex.receiver, layout = "hierarchy")

# Compute the network centrality scores
cellchat <- netAnalysis_computeCentrality(cellchat, slot.name = c("netP")) # the slot 'netP' means the inferred intercellular communication network of signaling pathways
# Visualize the computed centrality scores using heatmap, allowing ready identification of major signaling roles of cell groups
c1 <-  netAnalysis_signalingRole_network(cellchat, signaling = pathways.show, width = 8, height = 2.5, font.size = 8)

#Plot the signaling gene expression distribution using violin/dot plot
plotGeneExpression(cellchat, signaling = pathways.show)

